generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  disabled   Boolean     @default(false)
  username   String
  password   String
  role       Role
  name       String
  saleOrders SaleOrder[]
}

enum Role {
  USER
  ADMIN
}

model Member {
  id         Int         @id @default(autoincrement())
  disabled   Boolean     @default(false)
  name       String
  group      Group       @relation(fields: [groupId], references: [id])
  groupId    Int
  saleOrders SaleOrder[]

  @@index([groupId])
}

model Group {
  id            Int            @id @default(autoincrement())
  disabled      Boolean        @default(false)
  name          String
  members       Member[]
  productPrices ProductPrice[]
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String
  productPrices ProductPrice[]
}

model ProductPrice {
  id        Int        @id @default(autoincrement())
  date      DateTime
  price     Decimal
  product   Product    @relation(fields: [productId], references: [id])
  productId Int
  group     Group      @relation(fields: [groupId], references: [id])
  groupId   Int
  saleItems SaleItem[]

  @@index([productId])
  @@index([groupId])
}

model SaleItem {
  id             Int          @id @default(autoincrement())
  quantity       Int
  productPrice   ProductPrice @relation(fields: [productPriceId], references: [id])
  productPriceId Int
  saleOrder      SaleOrder    @relation(fields: [saleOrderId], references: [id])
  saleOrderId    Int

  @@index([productPriceId])
  @@index([saleOrderId])
}

model SaleOrder {
  id        Int        @id @default(autoincrement())
  date      DateTime
  saleItems SaleItem[]
  member    Member     @relation(fields: [memberId], references: [id])
  memberId  Int
  user      User       @relation(fields: [userId], references: [id])
  userId    Int

  @@index([memberId])
  @@index([userId])
}
