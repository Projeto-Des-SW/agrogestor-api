generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  disabled Boolean @default(false)
  username String
  password String
  role     Role
  name     String
}

enum Role {
  USER
  ADMIN
}

model Member {
  id             Int             @id @default(autoincrement())
  disabled       Boolean         @default(false)
  name           String
  group          Group           @relation(fields: [groupId], references: [id])
  groupId        Int
  saleOrders     SaleOrder[]
  productionLogs ProductionLog[]

  @@index([groupId])
}

model Group {
  id            Int            @id @default(autoincrement())
  disabled      Boolean        @default(false)
  name          String
  members       Member[]
  productPrices ProductPrice[]
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String
  productPrices ProductPrice[]
}

model ProductPrice {
  id        Int        @id @default(autoincrement())
  date      DateTime
  price     Float
  product   Product    @relation(fields: [productId], references: [id])
  productId Int
  group     Group      @relation(fields: [groupId], references: [id])
  groupId   Int
  saleItems SaleItem[]

  @@index([productId, groupId, date, price])
  @@index([productId])
  @@index([groupId])
}

model SaleItem {
  id             Int          @id @default(autoincrement())
  quantity       Int
  productPrice   ProductPrice @relation(fields: [productPriceId], references: [id])
  productPriceId Int
  saleOrder      SaleOrder    @relation(fields: [saleOrderId], references: [id], onDelete: Cascade)
  saleOrderId    Int

  @@index([productPriceId])
  @@index([saleOrderId])
}

model SaleOrder {
  id        Int        @id @default(autoincrement())
  date      DateTime
  saleItems SaleItem[]
  member    Member     @relation(fields: [memberId], references: [id])
  memberId  Int

  @@index([memberId])
}

enum Period {
  MORNING
  AFTERNOON
}

model ProductionEntry {
  id              Int           @id @default(autoincrement())
  date            DateTime
  period          Period
  quantity        Int
  price           Float
  productionLog   ProductionLog @relation(fields: [productionLogId], references: [id], onDelete: Cascade)
  productionLogId Int

  @@index([productionLogId])
}

model ProductionLog {
  id                Int               @id @default(autoincrement())
  date              DateTime
  productionEntries ProductionEntry[]
  member            Member            @relation(fields: [memberId], references: [id])
  memberId          Int

  @@index([memberId])
}
